{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/components/DeveloperConsole.js","BlockInfo.js","BlockNumber.js","BlockNumberSearch.js","Metadata.js","NodeInfo.js","App.js","index.js"],"names":["configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","console","log","INIT_STATE","socket","jsonrpc","RPC","types","CUSTOM_TYPES","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","rpc","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","DeveloperConsole","window","util","utilCrypto","Main","blockNumber","useState","block","setBlock","useEffect","chain","getBlockHash","hash","getBlock","info","Grid","Column","Table","celled","striped","size","Body","Row","Cell","width","textAlign","header","parentHash","toString","stateRoot","extrinsicsRoot","JSON","stringify","digest","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","bestNumberFinalized","unsubscribeAll","number","toNumber","unsub","catch","timer","time","id","setInterval","clearInterval","Card","Content","Statistic","label","extra","Icon","BlockNumber","Menu","attached","tabular","style","backgroundColor","borderColor","paddingTop","paddingBottom","Container","Image","src","position","alignItems","Input","icon","placeholder","BlockNumberSearch","getPairs","query","data","version","metadata","setMetadata","getMetadata","Header","Meta","Modal","trigger","Button","scrolling","Description","Metadata","nodeInfo","setNodeInfo","Promise","all","system","nodeName","nodeVersion","getInfo","href","NodeInfo","currentBlockNumber","setCurrentBlockNumber","loader","text","Dimmer","active","Loader","centered","columns","padded","Message","negative","compact","floating","content","contextRef","createRef","ref","Sticky","context","stackable","stretched","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cf1cd2f.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst connectedSocket = 'wss://rpc.polkadot.io';\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.CUSTOM_TYPES,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }));\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts);\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>;\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate();\n  if (apiState === 'READY') { window.api = api; }\n  if (keyringState === 'READY') { window.keyring = keyring; }\n  window.util = require('@polkadot/util');\n  window.utilCrypto = require('@polkadot/util-crypto');\n\n  return null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Table, Grid } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nexport default function Main (props) {\n  const { api } = useSubstrate();\n  const { blockNumber } = props;\n  const [block, setBlock] = useState({});\n\n  useEffect(() => {\n    const getBlock = async () => {\n      try {\n        const hash = await api.rpc.chain.getBlockHash(blockNumber);\n        const { block } = await api.rpc.chain.getBlock(hash);\n        console.info(block);\n        setBlock(block);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getBlock();\n  }, [api, blockNumber]);\n\n  return (\n    <Grid.Column>\n      <h1>Block Info</h1>\n      <Table celled striped size='small'>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell width={3} textAlign='right'>Block Number</Table.Cell>\n            <Table.Cell width={10}>{blockNumber}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell width={3} textAlign='right'>Parent Hash</Table.Cell>\n            <Table.Cell width={10}>{block.header && block.header.parentHash.toString()}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell width={3} textAlign='right'>State Root</Table.Cell>\n            <Table.Cell width={10}>{block.header && block.header.stateRoot.toString()}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell width={3} textAlign='right'>Extrinsics Root</Table.Cell>\n            <Table.Cell width={10}>{block.header && block.header.extrinsicsRoot.toString()}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell width={3} textAlign='right'>Digest</Table.Cell>\n            <Table.Cell width={10}>{block.header && JSON.stringify(block.header.digest)}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    </Grid.Column>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  let [blockNumber, setBlockNumber] = useState(0);\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\n\n  if (props.setBlockNumber) {\n    blockNumber = props.blockNumber;\n    setBlockNumber = props.setBlockNumber;\n  }\n\n  const bestNumber = props.setBlockNumber\n    ? api.derive.chain.bestNumber\n    : api.derive.chain.bestNumberFinalized;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber());\n      setBlockNumberTimer(0);\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber]);\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1);\n  };\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label={(props.setBlockNumber ? 'Current' : 'Finalized') + ' Block'}\n            value={blockNumber}\n          />\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='time' /> {blockNumberTimer}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function BlockNumber (props) {\n  const { api } = useSubstrate();\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized ? (\n      <Main {...props} />\n    ) : null;\n}\n","import React from 'react';\n\nimport {\n  Menu,\n  Input,\n  Container,\n  Image\n} from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  return (\n    <Menu\n      attached='top'\n      tabular\n      style={{\n        backgroundColor: '#fff',\n        borderColor: '#fff',\n        paddingTop: '1em',\n        paddingBottom: '1em'\n      }}\n    >\n      <Container>\n        <Menu.Menu>\n          <Image src={`${process.env.PUBLIC_URL}/assets/substrate-logo.png`} size='mini' />\n        </Menu.Menu>\n        <Menu.Menu position='right' style={{ alignItems: 'center' }}>\n          <Input icon='search' placeholder='Search...' />\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  );\n}\n\nexport default function BlockNumberSearch (props) {\n  const { api, keyring } = useSubstrate();\n  return keyring.getPairs && api.query ? <Main {...props} /> : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const [metadata, setMetadata] = useState({ data: null, version: null });\n\n  useEffect(() => {\n    const getMetadata = async () => {\n      try {\n        const data = await api.rpc.state.getMetadata();\n        setMetadata({ data, version: data.version });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getMetadata();\n  }, [api.rpc.state]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>Metadata</Card.Header>\n          <Card.Meta>\n            <span>v{metadata.version}</span>\n          </Card.Meta>\n        </Card.Content>\n        <Card.Content extra>\n          <Modal trigger={<Button>Show Metadata</Button>}>\n            <Modal.Header>Runtime Metadata</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <pre>\n                  <code>{JSON.stringify(metadata.data, null, 2)}</code>\n                </pre>\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function Metadata (props) {\n  const { api } = useSubstrate();\n  return api.rpc && api.rpc.state && api.rpc.state.getMetadata ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Card, Icon, Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const [nodeInfo, setNodeInfo] = useState({});\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([\n          api.rpc.system.chain(),\n          api.rpc.system.name(),\n          api.rpc.system.version()\n        ]);\n        setNodeInfo({ chain, nodeName, nodeVersion });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getInfo();\n  }, [api.rpc.system]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>{nodeInfo.nodeName}</Card.Header>\n          <Card.Meta>\n            <span>{nodeInfo.chain}</span>\n          </Card.Meta>\n          <Card.Description>\n            Built using the{' '}\n            <a href='https://github.com/substrate-developer-hub/substrate-front-end-template'>\n              Substrate Front End Template\n            </a>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='setting' />v{nodeInfo.nodeVersion}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function NodeInfo (props) {\n  const { api } = useSubstrate();\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.system.chain &&\n    api.rpc.system.name &&\n    api.rpc.system.version ? (\n      <Main {...props} />\n    ) : null;\n}\n","import React, { useState, createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Sticky, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\n\nimport BlockInfo from './BlockInfo';\nimport BlockNumber from './BlockNumber';\nimport BlockNumberSearch from './BlockNumberSearch';\nimport Metadata from './Metadata';\nimport NodeInfo from './NodeInfo';\n\nfunction Main () {\n  const [currentBlockNumber, setCurrentBlockNumber] = useState(0);\n  const { apiState, keyringState, apiError } = useSubstrate();\n\n  const loader = text =>\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>;\n\n  const message = err =>\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message negative compact floating\n          header='Error Connecting to Substrate'\n          content={`${err}`}\n        />\n      </Grid.Column>\n    </Grid>;\n\n  if (apiState === 'ERROR') return message(apiError);\n  else if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n  if (keyringState !== 'READY') {\n    return loader('Loading accounts (please review any extension\\'s authorization)');\n  }\n\n  const contextRef = createRef();\n\n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <BlockNumberSearch />\n      </Sticky>\n      <Container>\n        <Grid stackable columns='equal'>\n          <Grid.Row stretched>\n            <NodeInfo />\n            <Metadata />\n            <BlockNumber blockNumber={currentBlockNumber} setBlockNumber={setCurrentBlockNumber} />\n            <BlockNumber />\n          </Grid.Row>\n          <Grid.Row stretched>\n            <BlockInfo blockNumber={currentBlockNumber} />\n          </Grid.Row>\n        </Grid>\n      </Container>\n      <DeveloperConsole />\n    </div>\n  );\n}\n\nexport default function App () {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}